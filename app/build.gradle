apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


def cfg = rootProject.ext.android

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false


    defaultConfig {
        multiDexEnabled true
        applicationId "com.universal.aifun"
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        flavorDimensions "versionCode"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        config {
            keyAlias 'talk'
            keyPassword 'talkplus'
            storeFile file('../talkplus.jks')
            storePassword 'talkplus'
        }
    }

    productFlavors {

        // 标准通用
        normal {
            applicationId "com.universal.aifun"
            versionName cfg.versionName
            versionCode cfg.versionCode

            buildConfigField "String", "company_id", '""'
            buildConfigField "String", "company_domain", '"www"'

            buildConfigField "String", "home_ext_url", '""'
//            buildConfigField "boolean", "is_show_home_ext_btn", "false"

            buildConfigField "String", "user_agreement_ext_url", '"menke"'


            // app_logo
            manifestPlaceholders = [
                    app_logo     : "@mipmap/ic_launcher",
                    app_name     : "@string/app_name",
                    start_logo   : "@mipmap/start_logo",
                    app_scheme   : "menke",
                    JPUSH_APPKEY : "b859237de554b67e71fdf5ac", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default",
            ]

        }

    }


    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
        }
    }

    def curTime = new Date()
    def timeStr = curTime.format('MMddHHmm')
    buildTypes {

        debug {
            shrinkResources false
            minifyEnabled false   //混淆
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            manifestPlaceholders = [
////                    JPUSH_APPKEY : "efe1fee9486a15e2cc89d289", //JPush上注册的包名对应的appkey.
//                    JPUSH_CHANNEL: "developer-default",
//            ]
        }

        demo {
            shrinkResources false
            minifyEnabled false   //混淆
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            manifestPlaceholders = [
////                    JPUSH_APPKEY : "efe1fee9486a15e2cc89d289", //JPush上注册的包名对应的appkey.
//                    JPUSH_CHANNEL: "developer-default",
//            ]
        }
        pre {//预发布打包
            minifyEnabled false
            minifyEnabled false   //混淆
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            manifestPlaceholders = [
////                    JPUSH_APPKEY : "efe1fee9486a15e2cc89d289", //JPush上注册的包名对应的appkey.
//                    JPUSH_CHANNEL: "developer-default",
//            ]
        }

        release {
            //混淆开关
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            // 是否zip对齐
            zipAlignEnabled false
            // 是否打开debuggable开关
            debuggable false
            // 是否打开jniDebuggable开关
            jniDebuggable false
            //添加秘钥
            signingConfig signingConfigs.config
            //混淆规则配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            manifestPlaceholders = [
////                    JPUSH_APPKEY : "b859237de554b67e71fdf5ac", //JPush上注册的包名对应的appkey.
//                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
//            ]

        }

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                if (variant.buildType.name.equals('demo')) {
                    outputFileName = "Demo-${variant.productFlavors[0].name}--V${defaultConfig.versionName}-${timeStr}.apk"
                }
                if (variant.buildType.name.equals('pre')) {
                    outputFileName = "Testing-${variant.productFlavors[0].name}--V${defaultConfig.versionName}-${timeStr}.apk"
                }
                if (variant.buildType.name.equals('release')) {
                    outputFileName = "Global-${variant.productFlavors[0].name}-V${defaultConfig.versionName}-${timeStr}.apk"
                }

            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    /** 引入module **/
    implementation project(':baselibrary')
    // implementation project(path:':jpushlibrary', configuration: 'default')
}